#!/bin/bash 
# nonet - runs command with limited/no network access
# Copyright 2012 Solorvox <solorvox@epic.geek.nz>
# Source: https://github.com/solorvox/nonet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# name of the group to deny access
GROUP="nonet"

# IP address to test that group CANNOT access.  If ping to this
# address is successful, then something is wrong with setup.
# Good example could be your router's external IP (faster) or use
# address of google's DNS 8.8.8.8
#TESTIP="8.8.8.8"
# Default: grabs the default gateway
TESTIP=$(route -n | grep 'UG[ \t]' | awk '{print $2}')

# command to run iptables to insert blocking rule, block all but localhost
IPTCMD="/sbin/iptables -I OUTPUT -m owner --gid-owner $GROUP ! -d 127.0.0.0/8 -j REJECT --reject-with icmp-net-unreachable"

# Ensure we have a group first
sg $GROUP "pwd > /dev/null"
RCODE=$?
if [ $RCODE -ne 0 ]; then
	echo "ERROR: Group [$GROUP] was not found!"
	echo "Please add via \"groupadd $GROUP; gpasswd -r $GROUP; gpasswd -M <username> $GROUP\""
	exit -1
fi

# safety check to ensure firewall is blocking before running command
sg $GROUP "ping -c 1 $TESTIP > /dev/null 2>&1"
RCODE=$?
if [ $RCODE -eq 0 ]; then
	echo "ERROR: Network access to [$TESTIP] detected!"
	echo ""
	echo "Ensure you have setup your firewall.  This can be done via a script"
	echo "located in /etc/network/if-pre-up.d/$GROUP running this command:"
	echo $IPTCMD
	echo
	echo "This script can run this command via sudo but it will not persist"
	echo "after a reboot. (Timeout in 15 seconds to no)"
	echo -n "Run iptables command with sudo now? [y/N]? "
	read -t 15 ans
	echo
	if [ "$ans" == "y" ]; then
		sudo $IPTCMD 
		if [ $? -ne 0 ]; then
			echo "Error: sudo or iptables rule failed.";
			exit -1
		fi
	else
		echo "Aborted running without valid iptables rule."
		exit -1
	fi
fi

if [ "${1}" == "" ]; then
	echo "Usage: $(basename $0) <command>"
	echo "Notes:  This script checks for network conectivity on each run."
	echo "If it can ping your default route (or TESTIP), it then asks if "
	echo "you wish to add an iptables rule to block access to ($GROUP)."
	echo
	echo "TIP: Steam users can prefix games by changing the \"Launch Options\""
	echo "nonet %command%"
	exit 0;
fi

COMMAND="$1"
shift
for arg; do
	COMMAND="$COMMAND \"$arg\""
done
sg $GROUP "$COMMAND"
